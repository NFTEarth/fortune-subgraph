enum TokenType {
  ETH
  ERC20
  ERC721
}

type Depositor @entity {
  id: ID!
  address: Bytes! # address
  biggestETHWon: BigInt! # uint256
  biggestROI: BigInt! # uint256
  totalRoundsWon: BigInt! # uint256
  totalRoundsPlayed: BigInt! # uint256
  lastRoundPlayed: BigInt!
}

type Participant @entity {
  id: ID!
  round: Round! # uint256
  depositor: Bytes! # address
  totalNumberOfEntries: BigInt!
  deposits: [Deposit!]! @derivedFrom(field: "participant")
}

type Deposit @entity {
  id: ID!
  round: Round!
  entriesCount: BigInt! # uint256
  depositor: Bytes! # address
  tokenAddress: Bytes! # address
  tokenAmount: BigInt! # uint256
  tokenId: BigInt! # uint256
  tokenType: TokenType!
  indice: BigInt!
  claimed: Boolean!
  participant: Participant!
  transaction: Transaction!
  claimedHash: Bytes
}

type Transaction @entity(immutable: true) {
  id: ID!
  hash: Bytes!
  round: Round!
  depositor: Bytes!
  deposits: [Deposit!]! @derivedFrom(field: "transaction")
  totalNumberOfEntries: BigInt!
  gasLimit: BigInt!
  gasPrice: BigInt!
  block: BigInt!
  timestamp: BigInt!
}

type Round @entity {
  id: ID!
  roundId: BigInt! # uint256roundId
  status: Int! # uint8
  cutoffTime: BigInt!
  lastStatusUpdate: BigInt
  statusLog: [RoundStatusLog!]! @derivedFrom(field: "round")
  maximumNumberOfDeposits: BigInt!
  maximumNumberOfParticipants: BigInt!
  valuePerEntry: BigInt! #uint256
  numberOfEntries: BigInt!
  numberOfParticipants: BigInt!
  duration: BigInt!
  winner: Bytes
  drawnAt: BigInt
  drawnHash: Bytes
  protocolFeeBp: Int! # uint16
  protocolFeeOwed: BigInt!
  deposits: [Deposit!]! @derivedFrom(field: "round")
  transactions: [Transaction!]! @derivedFrom(field: "round")
}

type RoundStatusLog @entity(immutable: true) {
  id: ID!
  round: Round!
  status: Int!
  transaction: Bytes!
  timestamp: BigInt!
  block: BigInt!
}

type Fortune @entity {
  id: ID!
  totalRounds: BigInt!
  currentRound: Round
}

type Currency @entity {
  id: ID!
  address: Bytes! # address
  isAllowed: Boolean! # bool
}
